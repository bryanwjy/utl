---
# We'll use defaults from the LLVM style, but with 4 columns indentation.
BasedOnStyle: LLVM
IndentWidth: 4
---
Language: Cpp
AlignAfterOpenBracket: DontAlign
AlignConsecutiveDeclarations: true
AlignEscapedNewlines: Left
AlignOperands: DontAlign
AlignTrailingComments: true
AllowShortBlocksOnASingleLine: Empty
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Inline
AllowShortLambdasOnASingleLine: All
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: false
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: false
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakInheritanceList: AfterColon
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakStringLiterals: true
ColumnLimit: 100
CompactNamespaces: false
PackConstructorInitializers: CurrentLine
Cpp11BracedListStyle: true
EmptyLineBeforeAccessModifier: LogicalBlock
IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: false
IndentPPDirectives: AfterHash
IndentWidth: 4
AccessModifierOffset: -4
IndentWrappedFunctionNames: false
NamespaceIndentation: None
DerivePointerAlignment: false
PointerAlignment: Left
QualifierAlignment: Right
SortIncludes: CaseSensitive
SpaceBeforeCaseColon: false

SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: false
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterIfMacros: false
  AfterOverloadedOperator: true
  AfterRequiresInClause: true
  AfterRequiresInExpression: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
FixNamespaceComments: true
PPIndentWidth: 2
IncludeBlocks:   Regroup
IncludeCategories:
  - Regex:           '.*\.generated\.h'
    Priority:        100
  - Regex:           '".*"'
    Priority:        1
  - Regex:           '^<.*\.(h)>'
    Priority:        3
  - Regex:           '^<.*>'
    Priority:        4
